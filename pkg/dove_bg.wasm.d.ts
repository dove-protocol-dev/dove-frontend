/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_authoritycreate_free(a: number, b: number): void;
export function authoritycreate_getData(a: number): void;
export function authoritycreate_getAccounts(a: number, b: number, c: number, d: number, e: number): void;
export function collateralcreate_getData(a: number): void;
export function collateralcreate_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function collateralsetoracle_getData(a: number, b: number, c: number, d: number): void;
export function collateralsetoracle_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function collateralupdatemaxdeposit_getData(a: number, b: number): void;
export function configupdate_getData(a: number, b: number): void;
export function configupdate_getAccounts(a: number, b: number, c: number, d: number, e: number): void;
export function flashmintbegin_getData(a: number, b: number): void;
export function flashmintbegin_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function flashmintend_getData(a: number): void;
export function flashmintend_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function offeringbuy_getData(a: number, b: number): void;
export function offeringbuy_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function offeringend_getData(a: number): void;
export function offeringend_getAccounts(a: number, b: number, c: number): void;
export function offeringstart_getData(a: number): void;
export function offeringstart_getAccounts(a: number, b: number, c: number, d: number, e: number): void;
export function savingsclaimrewards_getData(a: number): void;
export function savingsclaimrewards_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function savingscreate_getData(a: number): void;
export function savingscreate_getAccounts(a: number, b: number, c: number, d: number, e: number): void;
export function savingsdeposit_getData(a: number, b: number): void;
export function savingsdeposit_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function savingswithdraw_getData(a: number, b: number): void;
export function sovereignupdate_getData(a: number): void;
export function sovereignupdate_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function stabilitycreate_getData(a: number): void;
export function stabilitycreate_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function stabilitybuydvd_getData(a: number, b: number): void;
export function stabilitybuydvd_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function stabilityselldvd_getData(a: number, b: number): void;
export function stabilityselldvd_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function stabilityupdatemintlimit_getData(a: number, b: number): void;
export function stabilityupdatemintlimit_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function __wbg_userfeedcreate_free(a: number, b: number): void;
export function userfeedcreate_getData(a: number, b: number): void;
export function userfeedcreate_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function userfeedsetprice_getData(a: number, b: number): void;
export function userfeedsetprice_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function vaultborrow_getData(a: number, b: number): void;
export function vaultborrow_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number): void;
export function vaultbuycollateral_getData(a: number, b: number, c: number): void;
export function vaultbuycollateral_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function vaultclaimrewards_getData(a: number): void;
export function vaultclaimrewards_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function vaultcreate_getData(a: number): void;
export function vaultcreate_getAccounts(a: number, b: number, c: number, d: number, e: number): void;
export function vaultcreatereserve_getData(a: number): void;
export function vaultcreatereserve_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function vaultdeposit_getData(a: number, b: number): void;
export function vaultdeposit_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function vaultfailauction_getData(a: number): void;
export function vaultfailauction_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function vaultliquidate_getData(a: number): void;
export function vaultliquidate_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number): void;
export function vaultremovereserve_getData(a: number): void;
export function vaultremovereserve_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function vaultrepay_getData(a: number, b: number): void;
export function vaultrepay_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function vaultunliquidate_getData(a: number): void;
export function vaultunliquidate_getAccounts(a: number, b: number, c: number, d: number, e: number): void;
export function vaultwithdraw_getData(a: number, b: number, c: number): void;
export function vaultwithdraw_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): void;
export function vestingclaim_getData(a: number): void;
export function vestingclaim_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function vestingupdaterecipient_getData(a: number): void;
export function vestingupdaterecipient_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function __wbg_worldcreate_free(a: number, b: number): void;
export function worldcreate_getData(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function worldcreate_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function __wbg_auctionconfig_free(a: number, b: number): void;
export function auctionconfig_new(a: number, b: number, c: number): number;
export function auctionconfig_zero(): number;
export function auctionconfig_beginScale(a: number): number;
export function auctionconfig_decayRate(a: number): number;
export function auctionconfig_endScale(a: number): number;
export function __wbg_bookconfig_free(a: number, b: number): void;
export function bookconfig_new(a: number): number;
export function bookconfig_apy(a: number): number;
export function __wbg_book_free(a: number, b: number): void;
export function book_projectTotal(a: number, b: number, c: number): number;
export function book_projectRewards(a: number, b: number): number;
export function book_rewardSchedule(a: number): number;
export function book_creationTime(a: number): number;
export function decimal_tokenAmountToNumber(a: number, b: number): number;
export function decimal_numberToTokenAmount(a: number, b: number): number;
export function page_projectTotal(a: number, b: number, c: number, d: number): number;
export function page_projectRewards(a: number, b: number, c: number): number;
export function schedule_at(a: number, b: number): number;
export function schedule_total_emission(a: number): number;
export function userfeed_derive_key(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function oracle_new_wasm(a: number, b: number, c: number, d: number): void;
export function oracle_key(a: number, b: number): void;
export function oracle_zero(): number;
export function oracle_getPriceNegativeIfStale(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function __wbg_config_free(a: number, b: number): void;
export function config_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function config_doveOracle(a: number): number;
export function config_auctionConfig(a: number): number;
export function config_debtConfig(a: number): number;
export function config_flashMintConfig(a: number): number;
export function config_offeringConfig(a: number): number;
export function config_savingsConfig(a: number): number;
export function config_vaultConfig(a: number): number;
export function __wbg_flashmintconfig_free(a: number, b: number): void;
export function flashmintconfig_new(a: number, b: number): number;
export function __wbg_flashmint_free(a: number, b: number): void;
export function __wbg_offeringconfig_free(a: number, b: number): void;
export function offeringconfig_new(a: number, b: number, c: number, d: number): number;
export function __wbg_sovereign_free(a: number, b: number): void;
export function __wbg_vesting_free(a: number, b: number): void;
export function vesting_recipient(a: number, b: number): void;
export function vesting_schedule(a: number): number;
export function __wbg_authority_free(a: number, b: number): void;
export function authority_deriveKey(a: number, b: number, c: number): void;
export function __wbg_collateral_free(a: number, b: number): void;
export function collateral_deriveKey(a: number, b: number, c: number, d: number, e: number): void;
export function collateral_fromBytes(a: number, b: number, c: number): void;
export function collateral_oracle(a: number): number;
export function collateral_decimals(a: number): number;
export function collateral_deposited(a: number): number;
export function __wbg_savings_free(a: number, b: number): void;
export function savings_deriveKey(a: number, b: number, c: number, d: number, e: number): void;
export function savings_fromBytes(a: number, b: number, c: number): void;
export function savings_page(a: number): number;
export function stability_deriveKey(a: number, b: number, c: number, d: number, e: number): void;
export function stability_fromBytes(a: number, b: number, c: number): void;
export function stability_minted(a: number): number;
export function __wbg_vaultconfig_free(a: number, b: number): void;
export function vaultconfig_new(a: number, b: number, c: number, d: number, e: number): number;
export function vaultconfig_zero(): number;
export function vaultconfig_auctionFailureRewardCap(a: number): number;
export function vaultconfig_auctionFailureRewardRate(a: number): number;
export function __wbg_vault_free(a: number, b: number): void;
export function vault_deriveKey(a: number, b: number, c: number, d: number, e: number): void;
export function vault_fromBytes(a: number, b: number, c: number): void;
export function vault_reserves(a: number, b: number): void;
export function vault_isDebtZero(a: number): number;
export function __wbg_world_free(a: number, b: number): void;
export function __wbg_get_world_dove(a: number): number;
export function __wbg_set_world_dove(a: number, b: number): void;
export function __wbg_get_world_dvd(a: number): number;
export function __wbg_set_world_dvd(a: number, b: number): void;
export function __wbg_get_world_debt(a: number): number;
export function __wbg_set_world_debt(a: number, b: number): void;
export function __wbg_get_world_savings(a: number): number;
export function __wbg_set_world_savings(a: number, b: number): void;
export function __wbg_get_world_offering(a: number): number;
export function __wbg_set_world_offering(a: number, b: number): void;
export function __wbg_get_world_flash_mint(a: number): number;
export function __wbg_set_world_flash_mint(a: number, b: number): void;
export function __wbg_get_world_sovereign(a: number): number;
export function __wbg_set_world_sovereign(a: number, b: number): void;
export function __wbg_get_world_vesting(a: number): number;
export function __wbg_set_world_vesting(a: number, b: number): void;
export function __wbg_get_world_config(a: number): number;
export function __wbg_set_world_config(a: number, b: number): void;
export function world_deriveKey(a: number, b: number, c: number): void;
export function world_fromBytes(a: number, b: number, c: number): void;
export function world_zero(): number;
export function reserve_mintKey(a: number, b: number): void;
export function __wbg_token_free(a: number, b: number): void;
export function token_decimals(a: number): number;
export function token_mint(a: number, b: number): void;
export function __wbg_accountwasm_free(a: number, b: number): void;
export function accountwasm_get_key(a: number, b: number): void;
export function accountwasm_is_signer(a: number): number;
export function accountwasm_is_writable(a: number): number;
export function entrypoint(a: number): number;
export function schedule_new(a: number, b: number, c: number): number;
export function vault_debt(a: number): number;
export function schedule_maximum(a: number): number;
export function schedule_warmup_length(a: number): number;
export function schedule_total_length(a: number): number;
export function config_maxLtv(a: number): number;
export function stability_mintLimit(a: number): number;
export function vaultconfig_liquidationRewardCap(a: number): number;
export function vaultconfig_liquidationRewardRate(a: number): number;
export function reserve_balance(a: number): number;
export function token_supply(a: number): number;
export function __wbg_collateralcreate_free(a: number, b: number): void;
export function __wbg_flashmintbegin_free(a: number, b: number): void;
export function __wbg_flashmintend_free(a: number, b: number): void;
export function __wbg_offeringbuy_free(a: number, b: number): void;
export function __wbg_offeringend_free(a: number, b: number): void;
export function __wbg_offeringstart_free(a: number, b: number): void;
export function __wbg_savingsclaimrewards_free(a: number, b: number): void;
export function __wbg_savingscreate_free(a: number, b: number): void;
export function __wbg_savingsdeposit_free(a: number, b: number): void;
export function __wbg_savingswithdraw_free(a: number, b: number): void;
export function __wbg_sovereignupdate_free(a: number, b: number): void;
export function __wbg_stabilitycreate_free(a: number, b: number): void;
export function __wbg_stabilitybuydvd_free(a: number, b: number): void;
export function __wbg_stabilityselldvd_free(a: number, b: number): void;
export function __wbg_stabilityupdatemintlimit_free(a: number, b: number): void;
export function __wbg_userfeedsetprice_free(a: number, b: number): void;
export function __wbg_vaultborrow_free(a: number, b: number): void;
export function __wbg_vaultclaimrewards_free(a: number, b: number): void;
export function __wbg_vaultcreate_free(a: number, b: number): void;
export function __wbg_vaultcreatereserve_free(a: number, b: number): void;
export function __wbg_vaultdeposit_free(a: number, b: number): void;
export function __wbg_vaultfailauction_free(a: number, b: number): void;
export function __wbg_vaultliquidate_free(a: number, b: number): void;
export function __wbg_vaultremovereserve_free(a: number, b: number): void;
export function __wbg_vaultrepay_free(a: number, b: number): void;
export function __wbg_vaultunliquidate_free(a: number, b: number): void;
export function __wbg_vaultwithdraw_free(a: number, b: number): void;
export function __wbg_vestingclaim_free(a: number, b: number): void;
export function __wbg_vestingupdaterecipient_free(a: number, b: number): void;
export function __wbg_collateralupdatemaxdeposit_free(a: number, b: number): void;
export function __wbg_decimal_free(a: number, b: number): void;
export function __wbg_schedule_free(a: number, b: number): void;
export function __wbg_vaultbuycollateral_free(a: number, b: number): void;
export function __wbg_oracle_free(a: number, b: number): void;
export function __wbg_configupdate_free(a: number, b: number): void;
export function __wbg_userfeed_free(a: number, b: number): void;
export function __wbg_page_free(a: number, b: number): void;
export function __wbg_offering_free(a: number, b: number): void;
export function __wbg_stability_free(a: number, b: number): void;
export function __wbg_reserve_free(a: number, b: number): void;
export function __wbg_collateralsetoracle_free(a: number, b: number): void;
export function savingswithdraw_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function collateralupdatemaxdeposit_getAccounts(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function __wbg_keypair_free(a: number, b: number): void;
export function __wbg_transaction_free(a: number, b: number): void;
export function keypair_constructor(): number;
export function keypair_toBytes(a: number, b: number): void;
export function keypair_fromBytes(a: number, b: number, c: number): void;
export function keypair_pubkey(a: number): number;
export function transaction_constructor(a: number, b: number): number;
export function transaction_message(a: number): number;
export function transaction_messageData(a: number, b: number): void;
export function transaction_verify(a: number, b: number): void;
export function transaction_partialSign(a: number, b: number, c: number): void;
export function transaction_isSigned(a: number): number;
export function transaction_toBytes(a: number, b: number): void;
export function transaction_fromBytes(a: number, b: number, c: number): void;
export function __wbg_hash_free(a: number, b: number): void;
export function __wbg_instruction_free(a: number, b: number): void;
export function __wbg_message_free(a: number, b: number): void;
export function __wbg_get_message_recent_blockhash(a: number): number;
export function __wbg_set_message_recent_blockhash(a: number, b: number): void;
export function hash_constructor(a: number, b: number): void;
export function hash_toString(a: number, b: number): void;
export function hash_equals(a: number, b: number): number;
export function hash_toBytes(a: number, b: number): void;
export function __wbg_instructions_free(a: number, b: number): void;
export function instructions_constructor(): number;
export function instructions_push(a: number, b: number): void;
export function pubkey_constructor(a: number, b: number): void;
export function pubkey_isOnCurve(a: number): number;
export function pubkey_createWithSeed(a: number, b: number, c: number, d: number, e: number): void;
export function pubkey_createProgramAddress(a: number, b: number, c: number, d: number): void;
export function pubkey_findProgramAddress(a: number, b: number, c: number, d: number): void;
export function systeminstruction_createAccount(a: number, b: number, c: number, d: number, e: number): number;
export function systeminstruction_createAccountWithSeed(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function systeminstruction_assign(a: number, b: number): number;
export function systeminstruction_assignWithSeed(a: number, b: number, c: number, d: number, e: number): number;
export function systeminstruction_transfer(a: number, b: number, c: number): number;
export function systeminstruction_transferWithSeed(a: number, b: number, c: number, d: number, e: number, f: number, g: number): number;
export function systeminstruction_allocate(a: number, b: number): number;
export function systeminstruction_allocateWithSeed(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function systeminstruction_createNonceAccount(a: number, b: number, c: number, d: number): number;
export function systeminstruction_advanceNonceAccount(a: number, b: number): number;
export function systeminstruction_withdrawNonceAccount(a: number, b: number, c: number, d: number): number;
export function systeminstruction_authorizeNonceAccount(a: number, b: number, c: number): number;
export function pubkey_toBytes(a: number, b: number): void;
export function __wbg_pubkey_free(a: number, b: number): void;
export function solana_program_init(): void;
export function pubkey_equals(a: number, b: number): number;
export function pubkey_toString(a: number, b: number): void;
export function __wbindgen_export_0(a: number, b: number): number;
export function __wbindgen_export_1(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_export_2(a: number, b: number, c: number): void;
export function __wbindgen_export_3(a: number): void;
